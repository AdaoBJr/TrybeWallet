{"version":3,"sources":["files/images/trybe-logo.png","files/images/trybe-wallet.png","api/index.js","actions/index.js","components/FormsLogin.jsx","pages/Login.js","components/FormsWallet.jsx","components/TableWallet.jsx","pages/Wallet.js","App.js","reducers/user.js","functions/index.js","reducers/wallet.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","getCurrencies","a","fetch","data","json","result","console","log","Error","saveCurrenciesList","listCurrencies","type","payload","FormsLogin","handleChange","this","props","className","src","trybeLogo","alt","name","placeholder","onChange","data-testid","Component","connect","user","email","password","Login","state","disabledBtn","bind","validationEmailPwd","target","value","setState","Email","test","Password","length","addEmailPassword","to","disabled","onClick","React","dispatch","addLogin","initialState","id","description","currency","undefined","method","tag","currencies","showBtnEdit","FormsWallet","handleClickAdd","handleClickEdit","showEditingOnScreen","handleInputs","handleSelects","fetchCoins","editedExpense","expenses","exchangeRates","editingExpense","addToExpenses","addSumExpenses","expense","labelName","inputName","inputValue","htmlFor","selectName","selectValue","selectItems","filter","coin","map","key","handleShownExpense","wallet","TableWallet","TableExpenses","handleClickRemove","removeExpense","parseFloat","ask","toFixed","buttons","deleteExpense","editExpense","Wallet","totalExpenses","trybeWallet","App","exact","path","component","INITIAL_STATE","userReducer","action","sumExpenses","reduce","acc","item","find","updatedExpenses","walletReducer","Object","keys","editedExpenses","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faa62760.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trybe-logo.8b07e0b0.png\";","module.exports = __webpack_public_path__ + \"static/media/trybe-wallet.b3b1c6ef.png\";","// Busca na Api com tratamento de sucesso / erro\nexport default async function getCurrencies() {\n  try {\n    const data = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await data.json();\n    return result;\n  } catch (error) {\n    console.log('deu erro!!!!!');\n    return Error(error);\n  }\n}\n","import getCurrencies from '../api';\n// LOGIN -------------------------------------------------------------------\nexport const ADD_LOGIN = 'ADD_LOGIN';\n\nexport const addLogin = (email, password) => ({\n  type: ADD_LOGIN,\n  payload: {\n    email,\n    password,\n  },\n});\n// -------------------------------------------------------------------------------------------------\n\n// WALLET -------------------------------------------------------------------\nexport const SAVE_CURRENCIES_LIST = 'SAVE_CURRENCIES_LIST';\nexport const FETCH_CURRENCIES_LIST_SUCCESS = 'FETCH_CURRENCIES_LIST_SUCCESS';\nexport const FETCH_CURRENCIES_LIST_ERROR = 'FETCH_CURRENCIES_LIST_ERROR';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const SUM_EXPENSES = 'SUM_EXPENSES';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const SHOW_EXPENSE = 'SHOW_EXPENSE';\n\nexport const addExpenses = (expense) => ({\n  type: ADD_EXPENSES,\n  payload: {\n    expense,\n  },\n});\n\nexport const sumExpenses = () => ({\n  type: SUM_EXPENSES,\n});\n\nexport const deleteExpense = (id) => ({\n  type: DELETE_EXPENSE,\n  payload: {\n    id,\n  },\n});\n\nexport const editExpense = (id) => ({\n  type: EDIT_EXPENSE,\n  payload: {\n    id,\n  },\n});\n\nexport const shownExpense = () => ({\n  type: SHOW_EXPENSE,\n  payload: {\n    editedExpense: false,\n  },\n});\n\nexport const saveCurrenciesList = (listCurrencies) => ({\n  type: SAVE_CURRENCIES_LIST,\n  payload: {\n    listCurrencies,\n  },\n});\n\n// Fetch Thunk\n\n// Thunk com Async / Await\nexport function fetchCurrencies() {\n  return async (dispatch) => {\n    const listCurrencies = await getCurrencies();\n    return dispatch(saveCurrenciesList(listCurrencies));\n  };\n}\n\n// Thunk com Then\n// export const fetchCurrencies = () => (dispatch) => {\n//   getCurrencies()\n//     .then((currenciesListSuccess) => dispatch(\n//       saveCurrenciesList(currenciesListSuccess),\n//     ));\n// };\n\n// -------------------------------------------------------------------------------------------------\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FaWallet, FaEnvelope, FaLock } from 'react-icons/fa';\nimport trybeLogo from '../files/images/trybe-logo.png';\n\nclass FormsLogin extends Component {\n  render() {\n    const { handleChange } = this.props;\n    return (\n      <>\n        <div className=\"headerLogin\">\n          <img src={ trybeLogo } alt=\"logotipo trybe\" />\n          <div className=\"walletLogin\">\n            <FaWallet className=\"wallet\" />\n            <h3>Wallet</h3>\n          </div>\n        </div>\n        <h2>Acesse sua Carteira</h2>\n        <div className=\"areaInputs\">\n          <div className=\"inputEmail\">\n            <FaEnvelope className=\"iconInput\" />\n            <input\n              name=\"email\"\n              placeholder=\"Insira seu e-mail\"\n              onChange={ handleChange }\n              data-testid=\"email-input\"\n            />\n          </div>\n          <div className=\"inputPwd\">\n            <FaLock className=\"iconInput\" />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Insira sua senha de 6 dígitos\"\n              onChange={ handleChange }\n              data-testid=\"password-input\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nFormsLogin.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ user: { email, password } }) => ({\n  email,\n  password,\n});\n\nexport default connect(mapStateToProps)(FormsLogin);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addLogin } from '../actions';\nimport FormsLogin from '../components/FormsLogin';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      disabledBtn: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validationEmailPwd = this.validationEmailPwd.bind(this);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({\n      [name]: value,\n    }, () => {\n      this.validationEmailPwd();\n    });\n  }\n\n  validationEmailPwd() {\n    const { email, password } = this.state;\n    const regex = /^[a-z0-9._]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i; // regex fonte: https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail / http://www.regexplained.co.uk/\n    const Email = regex.test(email);\n    const Password = password.length;\n    const minPwd = 6;\n\n    if (Email && Password >= minPwd) {\n      this.setState({\n        disabledBtn: false,\n      });\n    } else {\n      this.setState({\n        disabledBtn: true,\n      });\n    }\n  }\n\n  render() {\n    const { email, password, disabledBtn } = this.state;\n    const { addEmailPassword } = this.props;\n    return (\n      <div className=\"Login\">\n        <FormsLogin handleChange={ this.handleChange } />\n        <div className=\"areaButtonsLogin\">\n          <Link to=\"/carteira\">\n            <button\n              type=\"button\"\n              disabled={ disabledBtn }\n              className={ (disabledBtn) ? 'enterBtnLogin-color' : 'enterBtnLogin' }\n              onClick={ () => addEmailPassword(email, password) }\n            >\n              Entrar\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  addEmailPassword: PropTypes.func.isRequired,\n};\n\nconst mapDispathToProps = (dispatch) => ({\n  addEmailPassword: (email, password) => dispatch(\n    addLogin(email, password),\n  ),\n});\n\nexport default connect(null, mapDispathToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getCurrencies from '../api';\nimport { fetchCurrencies, addExpenses, sumExpenses, shownExpense } from '../actions';\n\nconst initialState = {\n  id: '',\n  value: '',\n  description: '',\n  currency: undefined,\n  method: '',\n  tag: '',\n  currencies: {},\n  showBtnEdit: false,\n};\nclass FormsWallet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickAdd = this.handleClickAdd.bind(this);\n    this.handleClickEdit = this.handleClickEdit.bind(this);\n    this.showEditingOnScreen = this.showEditingOnScreen.bind(this);\n    this.handleInputs = this.handleInputs.bind(this);\n    this.handleSelects = this.handleSelects.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchCoins } = this.props;\n    fetchCoins();\n  }\n\n  componentDidUpdate() {\n    const { editedExpense } = this.props;\n    if (editedExpense) {\n      this.showEditingOnScreen();\n    }\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleClickAdd() {\n    const { value, description, currency = 'USD', method, tag, showBtnEdit } = this.state;\n\n    const {\n      expenses, editingExpense: { exchangeRates },\n      addToExpenses, addSumExpenses } = this.props;\n\n    if (!showBtnEdit) {\n      const listCurrencies = await getCurrencies();\n      const expense = {\n        id: expenses.length,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates: listCurrencies,\n      };\n      addToExpenses(expense);\n      addSumExpenses();\n      this.setState(initialState);\n    } else {\n      const expense = {\n        id: expenses.length,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates,\n      };\n      addToExpenses(expense);\n      addSumExpenses();\n      this.setState(initialState);\n    }\n  }\n\n  handleClickEdit() {\n    const { id, value, description, currency, method, tag } = this.state;\n    const { addToExpenses, /* addSumExpenses, */\n      editingExpense: { exchangeRates } } = this.props;\n    const expense = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    };\n    addToExpenses(expense);\n    // addSumExpenses();\n    this.setState(initialState);\n  }\n\n  handleInputs(labelName, inputName, inputValue) {\n    return (\n      <label htmlFor={ inputName }>\n        { labelName }\n        <input\n          type=\"text\"\n          name={ inputName }\n          id={ inputName }\n          value={ inputValue }\n          className={ inputName }\n          data-testid={ `${inputName}-input` }\n          onChange={ this.handleChange }\n        />\n      </label>\n\n    );\n  }\n\n  handleSelects(labelName, selectName, selectValue, selectItems) {\n    if (labelName === 'Moeda:') {\n      return (\n        <label htmlFor={ selectName }>\n          { labelName }\n          <select\n            name={ selectName }\n            id={ selectName }\n            value={ selectValue }\n            className={ selectName }\n            data-testid={ `${selectName}-input` }\n            onChange={ this.handleChange }\n          >\n            {selectItems.filter((coin) => coin !== 'USDT')\n              .map((currency) => (\n                <option key={ currency }>{ currency }</option>))}\n          </select>\n        </label>\n      );\n    }\n    return (\n      <label htmlFor={ selectName }>\n        { labelName }\n        <select\n          name={ selectName }\n          id={ selectName }\n          value={ selectValue }\n          className={ selectName }\n          data-testid={ `${selectName}-input` }\n          onChange={ this.handleChange }\n        >\n          <option>Selecione</option>\n          {selectItems\n            .map((currency) => (\n              <option key={ currency }>{ currency }</option>))}\n        </select>\n      </label>\n    );\n  }\n\n  showEditingOnScreen() {\n    const { editingExpense: { id, value, description, currency, method, tag },\n      handleShownExpense } = this.props;\n    this.setState({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      showBtnEdit: true,\n    });\n    handleShownExpense();\n  }\n\n  render() {\n    const { value, description, currency, method, tag, showBtnEdit } = this.state;\n    const { currencies } = this.props;\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return (\n      <div className={ (!showBtnEdit) ? 'formsWalletAdd' : 'formsWalletEdit' }>\n        <div className=\"forms\">\n          {this.handleInputs('Valor:', 'value', value)}\n          {this.handleSelects('Moeda:', 'currency', currency, currencies)}\n          {this.handleSelects('Método de pagamento:', 'method', method, methods)}\n          {this.handleSelects('Tag:', 'tag', tag, tags)}\n          {this.handleInputs('Descrição:', 'description', description)}\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"edit-btn\"\n          className={ (!showBtnEdit) ? 'addExpense' : 'editExpense' }\n          onClick={ this.handleClickAdd }\n        >\n          {(!showBtnEdit) ? 'Adicionar despesa' : 'Editar despesa'}\n        </button>\n      </div>\n    );\n  }\n}\n\nFormsWallet.propTypes = {\n  fetchCoins: PropTypes.func.isRequired,\n  addToExpenses: PropTypes.func.isRequired,\n  addSumExpenses: PropTypes.func.isRequired,\n  handleShownExpense: PropTypes.func.isRequired,\n  editedExpense: PropTypes.bool.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editingExpense: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = ({\n  wallet: { currencies, expenses, editingExpense, editedExpense } }) => ({\n  currencies,\n  expenses,\n  editingExpense,\n  editedExpense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCoins: () => dispatch(\n    fetchCurrencies(),\n  ),\n  addToExpenses: (expenses) => dispatch(\n    addExpenses(expenses),\n  ),\n  addSumExpenses: () => dispatch(\n    sumExpenses(),\n  ),\n  handleShownExpense: () => dispatch(\n    shownExpense(),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormsWallet);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FaEdit, FaEraser } from 'react-icons/fa';\nimport { deleteExpense, sumExpenses, editExpense } from '../actions';\n\nclass TableWallet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { };\n    this.TableExpenses = this.TableExpenses.bind(this);\n    this.handleClickRemove = this.handleClickRemove.bind(this);\n  }\n\n  handleClickRemove(id) {\n    const { removeExpense, addSumExpenses } = this.props;\n    removeExpense(id);\n    addSumExpenses();\n  }\n\n  TableExpenses() {\n    const { expenses, handleClickEdit } = this.props;\n    const buttons = (id) => (\n      <div className=\"areaButtons\">\n        <button\n          type=\"button\"\n          data-testid=\"edit-btn\"\n          className=\"editButton\"\n          onClick={ () => handleClickEdit(id) }\n        >\n          <FaEdit className=\"editIcon\" />\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"delete-btn\"\n          className=\"eraseButton\"\n          onClick={ () => this.handleClickRemove(id) }\n        >\n          <FaEraser className=\"eraseIcon\" />\n        </button>\n      </div>\n    );\n    return (\n      expenses.map(({ id, description, tag, method, value, currency, exchangeRates }) => {\n        const coin = exchangeRates[currency];\n        return (\n          <tr key={ id } className={ (id % 2 === 0) ? 'tableBody isEven' : 'tableBody' }>\n            <td>{description}</td>\n            <td>{tag}</td>\n            <td>{method}</td>\n            <td>{value}</td>\n            <td>{coin.name}</td>\n            <td>{parseFloat(coin.ask).toFixed(2)}</td>\n            <td>{(coin.ask * value).toFixed(2)}</td>\n            <td>Real</td>\n            <td>\n              { buttons(id) }\n            </td>\n          </tr>\n        );\n      })\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"tableWallet\">\n        <thead className=\"tableHeader\">\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          { this.TableExpenses() }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTableWallet.propTypes = {\n  removeExpense: PropTypes.func.isRequired,\n  addSumExpenses: PropTypes.func.isRequired,\n  handleClickEdit: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = ({ wallet: { expenses } }) => ({\n  expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (id) => dispatch(\n    deleteExpense(id),\n  ),\n  handleClickEdit: (id) => dispatch(\n    editExpense(id),\n  ),\n  addSumExpenses: () => dispatch(\n    sumExpenses(),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport trybeWallet from '../files/images/trybe-wallet.png';\nimport FormsWallet from '../components/FormsWallet';\nimport TableWallet from '../components/TableWallet';\n\nclass Wallet extends React.Component {\n  render() {\n    const { email, totalExpenses } = this.props;\n    return (\n      <div className=\"walletPage\">\n        <div className=\"walletHeader\">\n          <img src={ trybeWallet } alt=\"imagem trybe\" />\n          <div className=\"email_totalExpenses\">\n            <p data-testid=\"email-field\">{`E-mail: ${email}` }</p>\n            <p data-testid=\"total-field\">\n              {`Despesa Total: R$ ${totalExpenses || '0'}`}\n            </p>\n            <p data-testid=\"header-currency-field\">\n              BRL\n            </p>\n          </div>\n        </div>\n        <div className=\"walletForms\">\n          <FormsWallet />\n          <TableWallet />\n        </div>\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  totalExpenses: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ user: { email }, wallet: { totalExpenses } }) => ({\n  email,\n  totalExpenses,\n});\n\nexport default connect(mapStateToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_LOGIN } from '../actions';\n\n// -------------------------------------------------------------------------------------------------\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n// -------------------------------------------------------------------------------------------------\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_LOGIN: {\n    const { payload: { email, password } } = action;\n    return {\n      ...state,\n      email,\n      password,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","// import React from 'react';\n// ---------------------------------------------------------------------------------------------\n// FormsWallet\nexport function sumExpenses(expenses) {\n  const listExpenses = expenses\n    .map(({ value, currency, exchangeRates }) => exchangeRates[currency].ask * value);\n  const totalExpenses = listExpenses.reduce((acc, value) => acc + value, 0).toFixed(2);\n  // localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  return totalExpenses;\n}\n// ---------------------------------------------------------------------------------------------\n\n// ---------------------------------------------------------------------------------------------\n// TableWallet\nexport function removeExpense(id, expenses) {\n  const listExpenses = [...expenses];\n  const updatedExpenses = listExpenses.filter((item) => item.id !== id);\n  // localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  return updatedExpenses;\n}\n\nexport function editExpense(id, expenses) {\n  const listExpenses = [...expenses];\n  const editingExpense = listExpenses.find((item) => item.id === id);\n  const updatedExpenses = removeExpense(id, expenses);\n  // localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  return {\n    updatedExpenses,\n    editingExpense,\n    editedExpense: true,\n  };\n}\n\n// ---------------------------------------------------------------------------------------------\n","import { sumExpenses, removeExpense, editExpense } from '../functions';\nimport {\n  SAVE_CURRENCIES_LIST,\n  ADD_EXPENSES,\n  SUM_EXPENSES,\n  DELETE_EXPENSE,\n  EDIT_EXPENSE,\n  SHOW_EXPENSE,\n} from '../actions';\n// -------------------------------------------------------------------------------------------------\nconst INITIAL_STATE = {\n  expenses: [],\n  currencies: [],\n  totalExpenses: '0',\n  editingExpense: {},\n  editedExpense: false,\n};\n// -------------------------------------------------------------------------------------------------\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_CURRENCIES_LIST: { const { payload: { listCurrencies } } = action;\n    const currencies = Object.keys(listCurrencies); // https://qastack.com.br/programming/5072136/javascript-filter-for-objects // Aula : Object 24/03/2021\n    return {\n      ...state,\n      currencies,\n    };\n  }\n  case ADD_EXPENSES: { const { payload: { expense } } = action;\n    const { expenses } = state;\n    return {\n      ...state,\n      expenses: [...expenses, expense],\n    };\n  }\n  case SUM_EXPENSES: { const { expenses } = state;\n    const totalExpenses = sumExpenses(expenses);\n    return {\n      ...state,\n      totalExpenses,\n    };\n  }\n  case DELETE_EXPENSE: { const { payload: { id } } = action; const { expenses } = state;\n    const updatedExpenses = removeExpense(id, expenses);\n    return {\n      ...state,\n      expenses: updatedExpenses,\n    };\n  }\n  case EDIT_EXPENSE: { const { payload: { id } } = action; const { expenses } = state;\n    const editedExpenses = editExpense(id, expenses);\n    const { updatedExpenses, editingExpense, editedExpense } = editedExpenses;\n    return {\n      ...state,\n      expenses: updatedExpenses,\n      editingExpense,\n      editedExpense,\n    };\n  }\n  case SHOW_EXPENSE: { const { payload: { editedExpense } } = action;\n    return {\n      ...state,\n      editedExpense,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}